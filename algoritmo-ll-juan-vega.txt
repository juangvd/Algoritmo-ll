-------------------------------------------------------------------------------
	                         Algoritmo II
-------------------------------------------------------------------------------

1.- Muestra de código 1 - function y return |

function a() {
   console.log('hello');
}
console.log('Dojo');


    variable    |      valor	     
________________|_______________      
	a	|     Dojo	
	   	|	  	


salida: Dojo
	
-------------------------------------------------------------------------------

2.- Muestra de código 2 - function y return |

function a(){
  console.log('hello');
  return 15;
}
x = a();
console.log('x is', x);


    variable    |      valor	     
________________|_______________      
	a	|  	hello	
	x  	|	x is 15  	
		|
		
	
salida: hello
	x is 15
	
-------------------------------------------------------------------------------

3.- Muestra de código 3 - function y return |

function a(n){
  console.log('n is', n);
  return n+15;
}
x = a(3);
console.log('x is', x);


    variable    |      valor	     
________________|_______________      
	n	|  	n is 3	
	x  	|	x is 18	
		|	
		
	
salida: n is 3
	x is 18

-------------------------------------------------------------------------------

4.- Muestra de código 4 - function y return |

function a(n) {
  console.log('n is', n);
  y = n*2;
  return y;
}
x = a(3) + a(5);
console.log('x is', x);


    variable    |      valor	     
________________|_______________      
	x	|  	3,5	
	x  	|	8 	
	y	|	16
		|	
		

salida: n is 3
	n is 5
	x is 16

-------------------------------------------------------------------------------

5.- Muestra de código 5 - orden de las operaciones |

function op(a,b) {
  c = a+b;
  console.log('c is', c);
  return c;
}
x = op(2,3) + op(3,5);
console.log('x is', x);


    variable    |      valor	     
________________|_______________      
	a	|  	2,3 	
	b	|	3,5
	c	|	5,8
	x	|	13 
		|


salida: c is 5
	c is 8
	x is 13
	
-------------------------------------------------------------------------------

6.- Muestra de código 6 - orden de las operaciones |

function op(a,b) {
  c = a+b;
  console.log('c is', c);
  return c;
}
x = op(2,3) + op(3,op(2,1)) + op(op(2,1), op(2,3));
console.log('x is', x)


    variable    |      valor	     
________________|_______________      
	c	|  	5 	
        c	|	3
	c	|	6
 	c	|	3
	c	|	5
	c	|	8
	x	|      19
		|


salida: c is 5
	c is 3
	c is 6
	c is 3
	c is 5
	c is 8
	x is 19
	
-------------------------------------------------------------------------------

7.- Muestra de código 7 - scoping

var x = 15;
function a() {
  var x = 10;
}
console.log(x);
a();
console.log(x);


    variable    |      valor	     
________________|_______________      
	x	|  	15 	
        x	|	15
		|	
		

salida: 15
	15
	
-------------------------------------------------------------------------------
                                 Actividad
-------------------------------------------------------------------------------

1.-

function multiply(x,y) {
    console.log(x);
    console.log(y);
}
b = multiply(2,3);
console.log(b);


    variable    |      valor
________________|_______________
	x	|  	2	
        y	|	3
		|	
 			

salida: 2
	3
	undefined
	
-------------------------------------------------------------------------------

2.-

function multiply(x,y) {
    return x*y;
}
b = multiply(2,3);
console.log(b);
console.log(multiply(5,2));


    variable    |      valor
________________|_______________
	x	|  	2. 5	
        y	|	3, 2
	b	|	6
 		|	
			
salida: 6
	10
	
-------------------------------------------------------------------------------

3.-

var x = [1,2,3,4,5,10];
for(var i=0; i<5; i++) {
   i = i + 3; 
   console.log(i);
}


    variable    |      valor
________________|_______________
	x	|  1,2,3,4,5,10	
        i	|  0,3	
		|  3,7			


salida: 3
	7

-------------------------------------------------------------------------------

4.-

var x=15;
console.log(x);
function awesome(){
    var x=10;
    console.log(x);
}
console.log(x);
awesome();
console.log(x);


    variable    |      valor
________________|_______________
	x	|  15,15,10,15		
        	|		


salida: 15
	15
	10
	15

-------------------------------------------------------------------------------

5.-

for(var i=0; i<15; i+=2) {
   console.log(i);
}


    variable    |      valor
________________|_______________
	x	|  0,2,4,6,8,10,12,14		
        	|	

salida: 0
	2
	4
	6
	8
	10
	12
	14
	
-------------------------------------------------------------------------------

6.-

for(var i=0; i<3; i++) {
   for(var j=0; j<2; j++) {     
       console.log(i*j);
   }
}


    variable    |      valor
________________|_______________
	i	|  0,1,2,3		
        j	|  0,1,2,0,1,2,0,1,2	
		|	
 		| 0,0,0,1,0,2	
		|	

salida: 0
	0
	0
	1
	0
	2
	
-------------------------------------------------------------------------------

7.-

function looping(x,y) {
   for(var i=0; i<x; i++) {
      for(var j=0; j<x; j++) {       
          console.log(i*j);
      } 
   }
}
z = looping(3,3);
console.log(z);



    variable    |      valor
________________|_______________
	x	|  3		
        y	|  3	
	i	|  0,1,2,3	
 	j	|  0,1,2,3,0,1,2,3,0,1,2,3	
		|	
		|  0,0,0,0,1,2,0,2,4,undefined

salida: 0
	0
	0
	0
	1
	2
	0
	2
	4
	undefined
	
-------------------------------------------------------------------------------

8.-

function looping(x,y) {
   for(var i=0; i<x; i++) {
      for(var j=0; j<y; j++) {      
         console.log(i*j);
      } 
   }
   return x*y;
}
z = looping(3,5);
console.log(z);



    variable    |      valor
________________|_______________
	x	|  	3	
        y	|	5
	i	|	0,1,2,3
 	j	|	0,1,2,3,4,5,0,1,2,3,4,5,0,1,2,3,4,5
		|	
		|     0,0,0,0,0,0,1,2,3,4,0,2,4,6,8,15

salida: 0
	0
	0
	0
	0
	0
	1
	2
	3
	4
	0
	2
	4
	6
	8
	15
	
-------------------------------------------------------------------------------

                                   Parte 2

-------------------------------------------------------------------------------

1.- Print 1 to x

    Por favor, completa los siguientes códigos para que la función imprima (print)
    todos los enteros (integers) de 1 a x. Si x es negativo, haz que se muestre
    (print/log) “número negativo” y que la función devuelva falso.


function printUpTo(x) {
  // your code here

var y = false;
    for (var i = 0; i <= x; i++) {
        if (i % 10 == 0) {
            console.log(i);
        }
    }
    if (y === false) {
        console.log(y);
    }
}

printUpTo(1000); // debería imprimir todos los enteros de 1 to 1000
y = printUpTo(-10); // debería imprimir false
console.log(y); // debería imprimir false


    variable    |      valor
________________|_______________
	i	|  	0,1,2,3,...,1000	
        x	|	0,5,10,15,...,1000
	y	|	false,false
 		|	
			

salida: 0
	10
	20
	30
	.
	.
	.	
	980
	990
	1000
	false
	false
	undefined	
	
-------------------------------------------------------------------------------
				
2.- PrintSum

    Completa el código de más abajo para que la función imprima enteros (integers)
    de 0 a x y donde cada entero imprima la suma (sum) parcial. Haz que la función
    entregue la suma final.


function printSum(x) {
  var sum = 0;
  //your code here

for (var i = 0; i <= x; i++) {
        if (i % 1 == 0) {
            sum = i + sum;
            console.log(i);
        }
    }
  return sum
}
y = printSum(255) // debería imprimir todos los enteros de 0 a 255 y que cada entero imprima la suma parcial.
console.log(y) // // debería imprimir 32640


    variable    |      valor
________________|_______________
	i	|  0,1,2,3,...,255	
        x	|  0,1,2,3,...,255	
	y	|  32640	
 		|	
			

salida: 0
	1
	2
	3
	.	
	.	
	.
	254
	255
	32640
		
-------------------------------------------------------------------------------

3.- PrintSumArray

    Completa el código a continuación para que la función entregue la suma de
    todos los valores en un array dado.


function printSumArray(x) {
    var sum = 0;
    for (var i = 0; i < x.length; i++) {
        //your code here

        sum += x[i];
    }
    return sum;
}
console.log(printSumArray([1, 2, 3])); // debería imprimir 6



    variable    |      valor
________________|_______________
	i	|  0,1,2		
        x	|  6	
		|	
 			
			
salida: 6
	
-------------------------------------------------------------------------------

4.- Bonus: LargestElement

Crea una función que entregue el elemento más grande (largest element) en un 
array. Por ejemplo largestElement([1,30,5,7]) debiera dar como resultado 30.


function elementoMayor(){
    var m= [3,7,1,27,4];
    var buscar=0;
    for (var i=0; i<m.length;i++){
        if (m[i]>buscar){
            buscar =m[i];
        }
    }
    return buscar;
}
console.log(elementoMayor());


    variable    |      valor
________________|_______________
	i	|  0,1,2,3,4		
        m	|  27
		|	
 			
			
salida: 27
	
-------------------------------------------------------------------------------


























































